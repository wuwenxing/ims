<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gwghk.ims.activity.dao.inf.VActPrizeRecordDao">
 	
	<sql id="Base_Column_List_sql">
		select a.id,a.task_record_id,a.act_no, a.record_no,a.third_record_no,a.env,
		a.account_no,a.cust_name, a.cust_mobile,a.cust_email,a.platform,
		a.item_amount,a.item_amount_unit,
		a.item_price,a.item_price_unit,a.gived_status,a.audit_status,a.add_from_bos,
		a.item_no,<!-- a.lottery_status, a.lottery_time, -->a.task_name,
		a.ext1, a.ext2, a.ext3, a.ext4, a.ext5,a.create_date,
		a.create_ip, a.create_user, a.delete_flag, a.enable_flag, a.update_date,
		a.update_ip, a.update_user,a.version_no,a.company_id,a.other_msg,
		a.remark,a.use_end_time,
        <!-- b.deal_start_time,b.deal_end_time,b.finish_time,-->b.deal_number,<!-- b.settlement_time, -->
        b.receive_trade_id,b.receive_finish_time,b.withdrawal_start_trade_id,b.withdrawal_start_time,b.need_trade_lots,b.finished_trade_lots,
        b.task_id,b.task_items_id,b.task_group, 
        d.item_name,d.item_category as 'ItemCategory',d.item_type,b.release_type,b.released_bonus,b.group_release,b.settle_flag,
        b.finished_lots_trade_id,b.finished_lots_trade_time,b.cumulative_trade_id,b.release_finish<!-- ,a.ref_account_no,a.real_ref_update_date, -->
		from (ims_prize_record_${actNo} a 
		   join ims_prize_record_ext_${actNo} b on (a.record_no = b.record_number)
		   left join act_items_setting d on (d.item_number = a.item_no))
		   where a.delete_flag !='Y' 
	</sql>
	<sql id="distinct_account_no">
		select distinct account_no
		from (act_prize_record_${companyCode} a 
		   join ims_prize_record_ext_${companyCode} b on (a.record_no = b.record_number)
		   join act_setting c on (a.activity_periods = c.activity_periods)
		   left join act_items_setting d on (d.item_number = a.item_no))
		   where a.delete_flag !='Y' 
	</sql>
	
	<sql id="Base_Column_List_sql_no_cancel">
		select a.id, a.act_no, a.record_no,a.third_record_no,a.env,
		a.account_no,a.cust_name, a.cust_phone,a.cust_email,a.cust_from,
		a.platform,a.item_amount,a.item_amount_unit,
		a.item_price,a.item_price_unit,a.gived_status,a.audit_status,
		a.item_no,<!-- a.lottery_status, a.lottery_time, -->a.add_from_bos,a.task_title,
		a.ext1, a.ext2, a.ext3, a.ext4, a.ext5,a.create_date,
		a.create_ip, a.create_user, a.delete_flag, a.enable_flag, a.update_date,
		a.update_ip, a.update_user,a.version_no,a.company_id,a.other_msg,
        <!-- b.deal_start_time,b.deal_end_time,b.finish_time,-->b.deal_number,<!-- b.settlement_time, -->
        b.receive_trade_id,b.receive_finish_time,b.withdrawal_start_trade_id,b.withdrawal_start_time,b.need_trade_lots,b.finished_trade_lots,
        b.task_id,b.task_items_id,b.task_group,
        d.item_name,d.item_category as 'itemCategory',d.item_type,b.release_type,b.released_bonus,b.group_release,b.settle_flag,
         b.finished_lots_trade_id,b.finished_lots_trade_time,<!-- a.ref_account_no,a.real_ref_update_date, -->b.cumulative_trade_id,a.remark,a.use_end_time,b.release_finish
		from (ims_prize_record_${actNo} a 
		   join ims_prize_record_ext_${actNo} b on (a.record_no = b.record_number)
		   left join act_items_setting d on (d.item_number = a.item_no)
		)
		 where a.delete_flag !='Y' and a.gived_status!='issue_cancel'
	</sql>
	
	<sql id="Base_Column_List_sql_ref">
		select a.id, a.activity_periods, a.record_no,a.ref_record_number,a.env,
		a.account_no,a.guest_name, a.guest_phone,a.guest_email,a.guest_from,
		a.guest_ip,a.guest_platForm,a.issue_amount,a.item_amount,a.item_amount_unit,
		a.item_price,a.item_price_unit,a.issuing_status,a.audit_status,a.send_status,
		a.item_number,a.lottery_status, a.lottery_time,a.add_from_bos,a.task_title,
		a.ext1, a.ext2, a.ext3, a.ext4, a.ext5,a.create_date,
		a.create_ip, a.create_user, a.delete_flag, a.enable_flag, a.update_date,
		a.update_ip, a.update_user,a.version_no,a.company_id,a.other_msg,
        <!-- b.deal_start_time,b.deal_end_time,b.finish_time,-->b.deal_number,<!-- b.settlement_time, -->
        b.receive_trade_id,b.receive_finish_time,b.withdrawal_start_trade_id,b.withdrawal_start_time,b.need_trade_lots,b.finished_trade_lots,
        b.task_id,b.task_items_id,b.task_group, 
        d.item_name,d.item_category as 'giftCategory',d.item_type,b.release_type,b.released_bonus,b.group_release,b.settle_flag,
        b.finished_lots_trade_id,b.finished_lots_trade_time,a.ref_account_no,a.real_ref_update_date,
        a.use_end_time,date_add(e.bind_date, interval 8 hour) new_real_ref_update_date,e.customer_number new_ref_account_no,b.cumulative_trade_id,a.remark,b.release_finish
		from (ims_prize_record_${companyCode} a 
		   join ims_prize_record_ext_${companyCode} b on (a.record_no = b.record_number)
		   left join act_items_setting d on (d.item_number = a.item_no)
		   inner join t_related_customer_${companyCode} e on a.account_no=e.demo_customer_number
		   )
		   where a.delete_flag !='Y' 
	</sql>
	
	<select id="getActPriceRecord"   resultType="VActPrizeRecord" parameterType="VActPrizeRecord">
		<include refid="Base_Column_List_sql" /> 
		 and a.record_no = #{recordNumber}
	</select>
	<select id="isExistNoFinishedRecord"  resultType="java.lang.Integer" parameterType="java.util.Map">
		 select count(1) from (act_prize_record_${companyCode} a 
		   join ims_prize_record_ext_${companyCode} b on (a.record_no = b.record_number)  
		   join act_setting c on (a.activity_periods = c.activity_periods)
		   join act_items_setting d on  a.item_number=d.item_number and d.item_type='withGold'
		   ) where a.delete_flag !='Y'  and 
		   a.activity_periods =#{activityPeriods} and a.account_no =#{accountNo} and  a.guest_platForm =#{platform} 
		   <if test="taskId != null and taskId!=''">
			 and b.task_id=#{taskId} 
		  </if>
		  <if test="childTaskIds != null">
			 and b.task_id  in
			<foreach item="item" index="index" collection="childTaskIds"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		   </if>
		   and (a.audit_status is null or a.audit_status = #{auditStatusPass} or a.audit_status = #{auditStatusWait})  
			and (b.need_trade_lots is not null and (b.finished_trade_lots is null or b.need_trade_lots &gt; b.finished_trade_lots))
	</select>
	
	<select id="getMinWithdrawalStartTime"  resultType="java.util.Date" parameterType="java.util.Map">
		 select min(b.receive_finish_time) from (ims_prize_record_${companyCode} a 
		   join ims_prize_record_ext_${companyCode} b on (a.record_no = b.record_number)) where a.delete_flag !='Y' and 
		   a.activity_periods =#{activityPeriods} and a.account_no =#{accountNo} and  a.guest_platForm =#{platform} 
		   <if test="taskId != null and taskId!=''">
			 and b.task_id=#{taskId} 
		  </if>
		  <if test="childTaskIds != null">
			 and b.task_id  in
			<foreach item="item" index="index" collection="childTaskIds"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		   </if> 
	</select>
	
	
	<select id="getTaskLastFinishedLotTradeRecord"  resultType="VActPrizeRecord" parameterType="java.util.Map">
		 select b.finished_lots_trade_id ,b.finished_lots_trade_time  from (ims_prize_record_${companyCode} a 
		   join ims_prize_record_ext_${companyCode} b on (a.record_no = b.record_number)  
		   join act_setting c on (a.activity_periods = c.activity_periods)
		   join act_items_setting d on  a.item_number=d.item_number and d.item_type='withGold') 
		   where a.delete_flag !='Y'  and 
		   a.activity_periods =#{activityPeriods} and a.account_no =#{accountNo} and  a.guest_platForm =#{platform} 
		   <if test="taskId != null and taskId!=''">
			 and b.task_id=#{taskId} 
		  </if>
		  <if test="childTaskIds != null">
			 and b.task_id  in
			<foreach item="item" index="index" collection="childTaskIds"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		   </if>
		   and a.audit_status = #{auditStatusPass}
		   and b.need_trade_lots is not null and  b.finished_trade_lots is not null and b.need_trade_lots = b.finished_trade_lots
		    order by  b.finished_lots_trade_id desc,b.finished_lots_trade_time desc limit 1
	</select>

	<select id="listHasDealActPriceRecord"  resultType="VActPrizeRecord" parameterType="java.util.Map">
		<include refid="Base_Column_List_sql" /> 
		and a.enable_flag ='Y'  and b.finish_time is not NULL
		<if test="giftType != null and  giftType != '' ">
			and d.item_type = #{giftType}
		</if>
		<if test="issuingStatus != null">
			and a.issuing_status = #{issuingStatus}
		</if>
		<if test="accountNo != null">
			and a.account_no = #{accountNo}
		</if>
		<if test="platform != null">
			and a.guest_platForm = #{platform}
		</if>
		<if test="env != null and env !='' ">
			and a.env = #{env}
		</if>
		<if test="companyId != null">
			and a.company_id = #{companyId}
		</if>
		<if test="activityPeriodList != null">
			and a.activity_periods in
			<foreach item="item" index="index" collection="activityPeriodList"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		order by a.activity_periods,b.finish_time asc
	</select>


	<select id="getPreviosRecord"   resultType="VActPrizeRecord" parameterType="VActPrizeRecord">
		<include refid="Base_Column_List_sql" /> 
		 and  a.id != #{id}
		and a.finish_time is not null
		<if test="companyId != null">
			and a.company_id = #{companyId}
		</if>
		<if test="guestPlatForm != null and guestPlatForm !=''">
			and a.guest_platForm = #{guestPlatForm}
		</if>
		<if test="accountNo != null and accountNo !=''  ">
			and a.account_no = #{accountNo}
		</if>
		<if test="giftType != null and giftType !=''  ">
			and c.item_type = #{giftType}
		</if>
		order by a.finish_time desc
		limit 1
	</select>

	<select id="getAccountActPrizeRecord"   resultType="VActPrizeRecord" parameterType="VActPrizeRecord">
		<include refid="Base_Column_List_sql" /> 
		and a.company_id = #{companyId}
		and a.guest_platForm = #{guestPlatForm}
		and a.account_no = #{accountNo}
		and c.item_type = #{giftType}
		and a.finish_time is not null
		order by a.finish_time asc
	</select>

	<select id="findAccountNoWithGoldTradePrizeRecord" parameterType="VActPrizeRecord" resultType="java.lang.String">
		<include refid="distinct_account_no" /> 
		and a.activity_periods!='hx_rw_20171204143024' 
		and need_trade_lots is not null
		and finished_trade_lots is not null
		and (
			(issuing_status ='issuing' and need_trade_lots = 0 
				and (settlement_time is null  
					<if test="settlementTime!=null">
						or settlement_time &gt;= #{settlementTime}
					</if>
					)
			)
			or (
				finished_trade_lots &lt; need_trade_lots
				<if test="settlementTime!=null">
					and settlement_time &gt;= #{settlementTime}
				</if>
			)
		 )		
		<if test="activityPeriods!=null">
			and a.activity_periods=#{activityPeriods}
		</if>
		<if test="accountNo != null">
			and a.account_no = #{accountNo}
		</if>
		<if test="guestPlatForm != null">
			and a.guest_platForm = #{guestPlatForm}
		</if>
		and d.item_type='withGold'
		and withdrawal_start_time is not null
		and env='real'
		and a.send_status=0 
		and issuing_status!='waiting'
		and audit_status='auditPass'
		and a.item_amount>0
		and release_finish=0
		order by account_no
	</select>
	
	<select id="findWithGoldTradePrizeRecord" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql_no_cancel" /> 
		and a.activity_periods!='hx_rw_20171204143024'
		and need_trade_lots is not null
		and finished_trade_lots is not null
		and (
			issuing_status ='issuing' and need_trade_lots = 0 
			or 
			finished_trade_lots &lt; need_trade_lots
			or 
			(
			(b.release_type=4 or b.release_type=3) and truncate(b.released_bonus,2) &lt; truncate(a.item_amount,2) 
			)
		 )		
		<if test="activityPeriods!=null">
			and a.activity_periods=#{activityPeriods}
		</if>
		<if test="accountNo != null">
			and (a.account_no = #{accountNo} and a.ref_account_no is null)
		</if>
		<if test="refAccountNo != null">
			and a.ref_account_no = #{refAccountNo}
		</if>
		<if test="guestPlatForm != null">
			and a.guest_platForm = #{guestPlatForm}
		</if>
		<if test="accountNoBegin!=null">
			and a.account_no &gt;= #{accountNoBegin}
		</if>
		<if test="accountNoEnd!=null">
			and a.account_no &lt;= #{accountNoEnd}
		</if>
		and d.item_type='withGold'
		and withdrawal_start_time is not null
		and a.send_status=0 
		and issuing_status!='waiting'
		and audit_status='auditPass'
		and a.item_amount>0
		and release_finish=0
		order by 
			account_no,
			guest_platForm,
			a.activity_periods,
			a.id
	</select>
	
	<select id="findPrizeRecordListByExample" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
		SELECT
			a.id,
			a.activity_periods,
			a.record_no,
			a.ref_record_number,
			a.env,
			a.account_no,
			a.guest_name,
			a.guest_phone,
			a.guest_email,
			a.guest_from,
			a.guest_ip,
			a.guest_platForm,
			a.item_amount,
			a.item_amount_unit,
			a.item_price,
			a.item_price_unit,
			a.issuing_status,
			a.audit_status,
			a.send_status,
			a.item_no,
			a.lottery_status,
			a.lottery_time,
			a.add_from_bos,
			a.task_title,
			a.create_date,
			a.create_ip,
			a.create_user,
			a.delete_flag,
			a.enable_flag,
			a.update_date,
			a.update_ip,
			a.update_user,
			a.version_no,
			a.company_id,
			a.other_msg,
			c.activity_name,
			d.item_name,
			d.item_category AS 'giftCategory',
			d.item_type
		FROM
			ims_prize_record_${companyCode} a
		LEFT JOIN act_setting c ON
			a.activity_periods = c.activity_periods
		LEFT JOIN act_items_setting d ON
			d.item_number = a.item_no
		WHERE
			a.send_status = 0 and
			a.audit_status = 'auditPass' and
		 	a.issuing_status = 'issuing' and
		 	a.item_amount > 0 and
		 	a.delete_flag != 'Y' and
		 	d.item_type = 'virtual' and
		 	d.item_category IN (
			'mobile_data',
			'mobile_charge')
	</select>
	
	<select id="getFinishTradeLot" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
		select 
			ROUND(sum(finished_trade_lots),4) finished_trade_lots,ROUND(sum(need_trade_lots),4) need_trade_lots,ROUND(sum(item_amount),4) item_amount 
		from (ims_prize_record_${companyCode} a 
		   join ims_prize_record_ext_${companyCode} b on (a.record_no = b.record_number))
		 where a.delete_flag !='Y' 
		 	and a.enable_flag='Y'
			and need_trade_lots is not null
			and finished_trade_lots is not null
			and a.activity_periods=#{activityPeriods}
			and a.account_no = #{tmpAccountNo}
			and a.guest_platForm = #{guestPlatForm}
			and audit_status='auditPass'
	</select>
	
	<select id="getTokenCoinSum" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
		select 
			ROUND(sum(a.item_amount),4) item_amount ,max(a.use_end_time) use_end_time
		from (ims_prize_record_${companyCode} a 
		   join ims_prize_record_ext_${companyCode} b on (a.record_no = b.record_number)
		   left join act_items_setting d on (d.item_number = a.item_no))
		 where a.delete_flag !='Y' 
		 	and a.enable_flag='Y'
			and a.activity_periods=#{activityPeriods}
			and a.account_no = #{tmpAccountNo}
			and a.guest_platForm = #{guestPlatForm}
			and audit_status='auditPass'
			and d.item_type='tokenCoin'
	</select>
	
	<select id="findSettlementWithGoldTradePrizeRecord" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql_no_cancel" /> 
		and a.act_no!='hx_rw_20171204143024' 
		and need_trade_lots is not null
		and finished_trade_lots is not null
		<choose>
			<when test="releaseType == 3">
				and release_type &gt;=3 
			</when>
			<otherwise>
				and finished_trade_lots &lt; need_trade_lots and release_type &lt;3
			</otherwise>
		</choose>		
		and settlement_time &lt;= #{settlementTime}
		and withdrawal_start_time is not null
		and release_finish=0
		and issuing_status='issue_success'
		and d.item_type='withGold'
		and b.deal_number is not null
		and a.item_amount>0
		<if test="id!=null">
			and a.id &gt; #{id}
		</if>
		order by a.id asc
		limit 100
	</select>
	
	<select id="findSettlementTokenCoinTradePrizeRecord" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql_no_cancel" /> 
		and a.activity_periods!='hx_rw_20171204143024' 
		and settlement_time &lt;= #{settlementTime}
		and withdrawal_start_time is not null
		and release_finish=0
		and issuing_status='issue_success'
		and d.item_type='tokenCoin'
		and b.deal_number is not null
		and a.item_amount>0
		order by a.id asc
		limit 100
	</select>
	
	<select id="findUnfinishedWithGoldRecordByAccountNo" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql" /> 
		and a.activity_periods!='hx_rw_20171204143024' 
		and need_trade_lots is not null
		and finished_trade_lots is not null
		and (finished_trade_lots &lt; need_trade_lots or (release_type=3 and truncate(released_bonus,2) &lt; truncate(a.item_amount,2)))
		and withdrawal_start_time is not null
		and release_finish=0
		and issuing_status in('issue_success','issue_fail')  
		and d.item_type='withGold'
		<if test="accountNo!=null">
			and a.account_no = #{accountNo} 
		</if>
		<if test="guestPlatForm != null">
			and a.guest_platForm = #{guestPlatForm}
		</if>
		<if test="activityPeriods">
			and a.activity_periods=#{activityPeriods}
		</if>
		order by a.id asc
	</select>
	
	<select id="findUnfinishedTokenCoinByAccountNo" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql" /> 
		and a.activity_periods!='hx_rw_20171204143024' 
		and release_finish=0
		and issuing_status in('issue_success','issue_fail')  
		and d.item_type='tokenCoin'
		<if test="accountNo!=null">
			and a.account_no = #{accountNo} 
		</if>
		<if test="guestPlatForm != null">
			and a.guest_platForm = #{guestPlatForm}
		</if>
		<if test="activityPeriods">
			and a.activity_periods=#{activityPeriods}
		</if>
		order by a.id asc
	</select>
	
	<select id="findZeroFinishTradeLot" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql" /> 
		and a.activity_periods!='hx_rw_20171204143024' 
		and need_trade_lots is not null
		and finished_trade_lots is not null	
		and d.item_type='withGold'
		and withdrawal_start_time is not null
		and env='real'
		and a.send_status=0 
		and issuing_status = 'issuing'
		and audit_status='auditPass'
		and a.item_amount>0
		and release_finish=0
		and finished_trade_lots = 0
		order by a.activity_periods,guest_platForm,account_no,a.id
		limit 100
	</select>
	
	<select id="findDemoZeroFinishTradeLot" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql_ref" /> 
		and a.activity_periods!='hx_rw_20171204143024' 
		and need_trade_lots is not null
		and finished_trade_lots is not null	
		and d.item_type='withGold'
		and withdrawal_start_time is not null
		and env='demo'
		and a.send_status=0 
		and issuing_status = 'issuing'
		and audit_status='auditPass'
		and a.item_amount>0
		and release_finish=0
		and finished_trade_lots = 0
		and release_type &lt; 3
		and e.customer_number is not null
		order by a.activity_periods,guest_platForm,account_no,a.id
		limit 100
	</select>
	
	<select id="findSuccessWithGoldTradePrizeRecordLimitType3" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql_no_cancel" /> 
		and need_trade_lots = finished_trade_lots
		<if test="activityPeriods!=null">
			and a.activity_periods=#{activityPeriods}
		</if>
		<if test="accountNo != null">
			and a.account_no = #{accountNo}
		</if>
		<if test="guestPlatForm != null">
			and a.guest_platForm = #{guestPlatForm}
		</if>
		and d.item_type='withGold'
		and withdrawal_start_time is not null
		and env='real'
		and a.send_status=0 
		and issuing_status!='waiting'
		and audit_status='auditPass'
		and a.item_amount>0
		and release_type=3
		and release_finish=0
		order by a.activity_periods,guest_platForm,account_no,a.id
	</select>
	
	<select id="findSettlementWithGoldTradePrizeRecordLimitType3" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql_no_cancel" /> 
		and need_trade_lots=finished_trade_lots
		and gived_status ='issue_success' 
		and settlement_time &lt;= #{settlementTime}
		and d.item_type='withGold'
		and withdrawal_start_time is not null
		and env='real'
		and audit_status='auditPass'
		and a.item_amount>0
		and release_type=3
		and release_finish=0
		order by 
			account_no,
			guest_platForm,
			a.activity_periods,
			a.id
		limit 200
	</select>
	
	<select id="findDemoTokenCoinReadySend" parameterType="java.lang.String" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql_ref" /> 
		and d.item_type='tokenCoin' 
		and issuing_status = 'issuing'
		and a.item_amount>0
		and e.customer_number is not null
		and release_finish=0 
		and issuing_status!='waiting'
		and audit_status='auditPass'
		and a.env='demo'
		order by 
			account_no,
			guest_platForm,
			a.activity_periods
		limit 200
	</select>
	
	<select id="findRealTokenCoinReadySend" parameterType="java.lang.String" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql" /> 
		and d.item_type='tokenCoin' 
		and issuing_status = 'issuing'
		and a.item_amount>0
		and release_finish=0
		and issuing_status!='waiting'
		and audit_status='auditPass'
		and a.env='real'
		order by 
			account_no,
			guest_platForm,
			a.activity_periods
		limit 200
	</select>
	
	<select id="findUnfinishedRecordByAccountNo" parameterType="java.util.Map"  resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql" />  
		and (
				(d.item_type='withGold' and release_finish=0)
				or issuing_status !='issue_success'
			)
		<if test="accountNo!=null">
			and a.account_no = #{accountNo} 
		</if>
		<if test="guestPlatForm != null">
			and a.guest_platForm = #{guestPlatForm}
		</if>
		<if test="activityPeriods">
			and a.activity_periods=#{activityPeriods}
		</if>
	</select>
	
	<select id="findByAccountNoAndActPeriods" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
  		<include refid="Base_Column_List_sql" /> 
  		<if test="accountNo!=null">
			and a.account_no = #{accountNo} 
		</if>
		<if test="guestPlatForm != null">
			and a.guest_platForm = #{guestPlatForm}
		</if>
		<if test="activityPeriods">
			and a.activity_periods=#{activityPeriods}
		</if>
		and release_finish=0
  	</select>
  	
  	<select id="findSettlementWaitingPrize" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
  		<include refid="Base_Column_List_sql" /> 
  		<if test="settlementTime!=null">
  			and b.settlement_time &lt;= #{settlementTime}
  		</if>
  		and a.gived_status='waiting' 
		and a.audit_status='auditPass'
		and b.release_finish=0
		order by id asc 
		limit 100
  	</select>
  	
  	<select id="findAbnormalPrizeRecord" parameterType="java.util.Map" resultType="VActPrizeRecord">
  		<include refid="Base_Column_List_sql" />
  			<if test="delayDay!=null">
  			and b.settlement_time &lt;=date_add(now(), interval -${delayDay} day) 
  			</if>
  			<if test="delayMinute">
  			and b.settlement_time &lt;=date_add(now(), interval -${delayMinute} minute) 	
  			</if>
  			and b.release_finish=0
  			and a.issuing_status  in ('in_library','out_library','issuing','in_distributed','waiting','issue_cancel')
  			order by settlement_time asc limit 20
  	</select>
  	
  	<select id="findSuccessPrizeRecord" parameterType="java.util.Map" resultType="VActPrizeRecord">
  		<include refid="Base_Column_List_sql" />
  			and b.settlement_time &lt;=date_add(now(), interval -1 day) 
  			and b.release_finish=0
  			and a.issuing_status ='issue_success'
  			and d.item_type!='withGold'
  			order by release_finish asc limit 20
  	</select>
  	
  	<select id="findSettlementGoldCoinUnRelativeRecord" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
  		select a.id, a.actno, a.record_no,a.third_record_no,a.env,
			a.account_no,a.cust_name, a.cust_mobile,a.cust_email,
			a.platform,a.item_amount,a.item_amount_unit,
			a.item_price,a.item_price_unit,a.gived_status,a.audit_status,
			a.item_no,<!-- a.lottery_status, a.lottery_time, -->a.add_from_bos,a.task_title,
			a.ext1, a.ext2, a.ext3, a.ext4, a.ext5,a.create_date,
			a.create_ip, a.create_user, a.delete_flag, a.enable_flag, a.update_date,
			a.update_ip, a.update_user,a.version_no,a.company_id,a.other_msg,
	        <!-- b.deal_start_time,b.deal_end_time,b.finish_time-->,b.deal_number,<!-- b.settlement_time, -->
	        b.receive_trade_id,b.receive_finish_time,b.withdrawal_start_trade_id,b.withdrawal_start_time,b.need_trade_lots,b.finished_trade_lots,
	        b.task_id,b.task_items_id,b.task_group, 
	        d.item_name,d.item_category as 'itemCategory',d.item_type,b.release_type,b.released_bonus,b.group_release,b.settle_flag,
	        b.finished_lots_trade_id,b.finished_lots_trade_time,<!-- a.ref_account_no,a.real_ref_update_date, -->b.cumulative_trade_id,a.remark,
	        a.use_end_time,b.release_finish
			from (ims_prize_record_${actNo} a 
			   join ims_prize_record_ext_${actNo} b on (a.record_no = b.record_number)
			   left join act_items_setting d on (d.item_number = a.item_no))
				left join t_related_customer e on a.account_no=e.demo_customer_number
			   where a.delete_flag !='Y'
		and b.release_finish=0
		and d.item_type in('withGold','tokenCoin')
		and e.customer_number is null 
		and a.gived_status='issuing' 
		and a.audit_status='auditPass'
		and a.env='demo'
		and b.settlement_time &lt;= #{settlementTime}
		order by a.id asc
  	</select>
  	
  	<select id="findSettlementAnalogCoinUnRelativeRecord" parameterType="VActPrizeRecord" resultType="VActPrizeRecord">
  		select a.id, a.actno, a.record_no,a.third_record_no,a.env,
			a.account_no,a.cust_name, a.cust_mobile,a.cust_email,
			a.platform,a.item_amount,a.item_amount_unit,
			a.item_price,a.item_price_unit,a.gived_status,a.audit_status,
			a.item_no,<!-- a.lottery_status, a.lottery_time, -->a.add_from_bos,a.task_title,
			a.ext1, a.ext2, a.ext3, a.ext4, a.ext5,a.create_date,
			a.create_ip, a.create_user, a.delete_flag, a.enable_flag, a.update_date,
			a.update_ip, a.update_user,a.version_no,a.company_id,a.other_msg,
	        <!-- b.deal_start_time,b.deal_end_time,b.finish_timm,-->b.deal_number,<!-- b.settlement_time, -->
	        b.receive_trade_id,b.receive_finish_time,b.withdrawal_start_trade_id,b.withdrawal_start_time,b.need_trade_lots,b.finished_trade_lots,
	        b.task_id,b.task_items_id,b.task_group, 
	        d.item_name,d.item_category as 'itemCategory',d.item_type,b.release_type,b.released_bonus,b.group_release,b.settle_flag,
	        b.finished_lots_trade_id,b.finished_lots_trade_time,<!-- a.ref_account_no,a.real_ref_update_date, -->b.cumulative_trade_id,a.remark,
	        a.use_end_time,b.release_finish
			from (ims_prize_record_${actNo} a 
			   join ims_prize_record_ext_${actNo} b on (a.record_no = b.record_number)
			   	left join act_items_setting d on (d.item_number = a.item_no))
				left join t_related_customer e on a.account_no=e.demo_customer_number
			   	where a.delete_flag !='Y'
		and b.release_finish=0
		and d.item_type ='analogCoin'
		and e.demo_customer_number is null 
		and a.gived_status='issuing' 
		and a.audit_status='auditPass'
		and a.env='real'
		and b.settlement_time &lt;= #{settlementTime}
		order by a.id asc
  	</select>
  	
  	<select id="getPrizeCount" parameterType="java.util.Map"  resultType="java.lang.Integer">
		 select  count(*) from ims_prize_record_${actNo} a  join ims_prize_record_ext_${actNo} b on a.record_no=b.record_number 
           where   a.ref_record_number is null  and a.delete_flag!='Y'
           <if test="activityPeriods !=null and activityPeriods!='' ">
               and a.activity_periods=#{activityPeriods} 
           </if>
          <if test="taskItemsId !=null and taskItemsId!='' ">
              and b.task_items_id=#{taskItemsId}
          </if>
           <if test="createStartTime !=null">
             and a.create_date &gt;=#{createStartTime}
           </if>
            <if test="createEndTime !=null">
             and a.create_date &lt;=#{createEndTime}
           </if>
	</select>
	
	<select id="findGoldAndCoinPrizeByAccount" parameterType="java.util.Map" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql" /> 
		and a.issuing_status='issue_success'  
		and d.item_type in('withGold','tokenCoin')
		and a.account_no = #{accountNo} 
		and a.guest_platForm = #{platform}
		and b.settlement_time &gt;=#{settlementTime}
		and a.send_status=0 
		and issuing_status!='waiting'
		and audit_status='auditPass'
		and a.item_amount>0
		 <if test="activityPeriods !=null and activityPeriods!='' ">
              and a.activity_periods=#{activityPeriods} 
         </if>
	</select>
	
	<update id="updateGivedStatus" parameterType="VActPrizeRecord">
		update ims_prize_record_${actNo} set gived_status=#{givedStatus} where id=#{id}
	</update>
	
	<select id="findListByAccount" resultType="VActPrizeRecord">
		<include refid="Base_Column_List_sql" /> 
		and a.account_no=#{accountNo} and audit_status='auditPass' and a.gived_status='issue_success' and d.item_type=#{itemType}
	</select>
</mapper>