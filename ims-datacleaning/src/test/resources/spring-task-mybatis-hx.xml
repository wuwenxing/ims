<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"	
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd   
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<bean name="dataSourceHx" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" primary="false">
		<property name="url" value="${jdbc_url_hx}" />
		<property name="username" value="${jdbc_username_hx}" />
		<property name="password" value="${jdbc_password_hx}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="3" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="60" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->               
		<property name="minEvictableIdleTimeMillis" value="3000000" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat,slf4j"/>
        <property name="connectionInitSqls" value="set names utf8mb4;"/>
	</bean>
		
	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactoryHx" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
		<property name="dataSource" ref="dataSourceHx" />
		<property name="configLocation" value="classpath:mybatis-hx.xml"></property>
		<property name="mapperLocations" value="classpath:mybatis-mapper/hx/*.xml" />
	</bean>
	<!-- 配置扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.gwghk.ims.datacleaning.dal.mapper.hx" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryHx" />
	</bean>
	
	<bean id="transactionManagerHx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceHx" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManagerHx" />
</beans>